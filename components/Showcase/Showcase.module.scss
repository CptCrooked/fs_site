@import "../../styles/mixins";

.showcase_container {
    display: block;
    width: 100%;
}

$heightByAR: calc(100vw / 4 * 2.6);
$control-div-padding-top-and-bottom: calc(var(--p-3) * 2);
.img_container {
    position: relative;
    width: 100%;
    height: $heightByAR;
    margin: 0 auto;

    & figure {
        position: absolute;
        opacity: 0;
        transition: opacity 0.2s !important;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;

        &>span>img {
            width: 100%;
            height: inherit;
        }
    }

        @media screen and (min-width: 768px) {
            height: 50vw;
            width: 80%;
        }

        @media screen and (min-width: 1280px) {
            aspect-ratio: 16 / 9;
        }
    
        @media screen and (min-width: 1800px) {
            max-width: 1366px;
            max-height: 1366px * 0.6;
        }

    & figcaption {
        position: absolute;
        top: var(--m-2);
        left: 0;
        background-image: var(--solid-bg);
        padding: var(--p-1) var(--p-2);
        padding-right: var(--p-3);
        border-radius: 0 var(--sm-border-radius) 2rem 0;
        box-shadow: var(--sm-md-shadow);
        text-shadow: var(--normal-text-shadow);
    }

    & div[role="presentation"] {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        transform: translateY(-150%);
        transition: transform 0.5s;
        z-index: 1;
        overflow: hidden;
        box-shadow: var(--md-shadow);
        background-image: url("/imgs/bg_light.png");
    }

    & div[role="presentation"]::before,
    & div[role="presentation"]::after {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }

    & div[role="presentation"]::before {
        content: "";
        z-index: 1;
        box-shadow: inset 0 0 5rem 5rem var(--sheet),
            inset 0 0 5rem 1rem var(--grey), inset 0 0 10rem 1rem rgba(0, 0, 0, 0), inset 0 0 10rem 1rem rgba(0, 0, 0, 0);
    }

    & div[role="presentation"]::after {
        content: "";
        background-image: url("/imgs/fs_logo2.png");
        background-repeat: no-repeat;
        background-size: 50%;
        background-position: center center;
        z-index: 1;
    }
}

.controls_wrapper_for_large_screens {
    position: relative;
}

.showcase_controls {
    position: relative;
    display: flex;
    justify-content: space-between;
    background-image: var(--solid-bg);
    box-shadow: var(--sm-md-shadow);
    padding: var(--p-3) var(--p-2);
    width: 100%;
    z-index: 1;
    
    @media screen and (min-width: 500px) {
        justify-content: center
    }

    @media screen and (min-width: 1280px) {
        position: unset;
        justify-content: space-between;
    }
    
    // at larger screens (> 768px) this should be position: absolute;

    &::after {
        content: attr(data-select-text);
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        pointer-events: none;
        font-size: clamp(1.1rem, 2vw, 1.6rem);
        color: var(--inverse-font-colour);
        text-shadow: var(--inverse-text-shadow);
        @include XYCenterChildren;
    }


    &::after {
        @media screen and (min-width: 1280px){   
            height: 3rem;
            top: unset;
            bottom: calc($control-div-padding-top-and-bottom + 3rem);
        }
    }



    & button,
    & select {
        display: block;
        font-family: inherit;
        cursor: pointer;
    }

    & button {
        background-image: var(--inverse-solid-bg);
        border: none;
        border-radius: var(--sm-border-radius);
        box-shadow: var(--sm-md-shadow);
        color: var(--inverse-font-colour);
        height: 3rem;
        margin: 0;
        width: 4rem;

        &:first-of-type,
        &:last-of-type {
            @media screen and (min-width: 768px) {
                max-width: 4rem;
            }

        }

        &:first-of-type {
            border-radius: var(--md-border-radius) var(--md-border-radius) var(--md-border-radius) 4rem;
        }

        &:last-of-type {
            border-radius: var(--md-border-radius) var(--md-border-radius) 4rem var(--md-border-radius);
        }
    }

    & select {

        appearance: none;
        background-image: var(--inverse-solid-bg);
        border: none;
        background-repeat: no-repeat;
        border-radius: var(--md-border-radius);
        box-shadow: var(--sm-md-shadow);
        height: 3rem;
        text-align: center;
        width: clamp(5.6rem, 60%, 20rem);
        margin: 0 var(--m-2);
        font-size: clamp(1.1rem, 1.75vw, 2rem);
        letter-spacing: inherit;
        padding: var(--p-2);
        text-shadow: var(--inverse-text-shadow);

        color: var(--inverse-font-colour);
        color: rgba(0, 0, 0, 0);
        text-shadow: 0 0 0 rgba(0, 0, 0, 0);

        @media screen and (min-width: 1280px) {
            position: absolute;
            bottom: calc($control-div-padding-top-and-bottom + 3rem);
            left: 50%;
            margin: 0;
            transform: translateX(-50%);
            border-radius: 3rem 3rem 0 0;
        }

    }

    & option {
        font-size: clamp(1.2rem, 1.75vw, 2rem);
        text-align: center;
        padding-left: var(--p-2);
        letter-spacing: 0.15rem;

        &:not(:first-of-type) {
            color: var(--blue);
            text-shadow: var(--light-sm-shadow);
        }
        
        &:first-of-type {
            pointer-events: none;
            color: rgba(0, 0, 0, 0.5);
        }
    }

}

.showImage {
    opacity: 1 !important;
}

.changeImageButton {

    &>div {
        height: 60%;
        width: 60%;
        margin: 0 auto;
        border-radius: inherit;
        border-top: 3px solid var(--inverse-font-colour);

    }

    &[data-btn-type="back"]>div {
        border-left: 3px solid var(--inverse-font-colour);
    }

    &[data-btn-type="next"]>div {
        border-right: 3px solid var(--inverse-font-colour);

    }
}

div[role="presentation"].selectChangeAnimation {
    transform: translateY(0%);
}