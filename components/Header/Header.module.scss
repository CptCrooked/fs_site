@import "../../styles/_mixins.scss";

.header {
  height: var(--header-height);
  display: flex;
  align-items: center;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  background-image: var(--glass-bg);
  box-shadow: var(--sm-md-shadow);
  padding: var(--p-6) 0;
  z-index: 5;

  & > div[role="presentation"] {
    position: relative;
    padding: var(--p-2);
    // box-shadow: inset 0 0 0 2px blue;
    width: 100%;
    align-items: center;
    justify-content: space-between;
    margin: 0 auto;

    @media screen and (min-width: 500px) {
      padding: 0;
      width: 90%;
    }

    @media screen and (min-width: 768px) {
      width: 80%;
    }

    @media screen and (min-width: 1800px) {
      max-width: 1366px;
    }
  }

  & .imageWrapper {
    background-image: var(--grey-gradient);
    width: 130px;
    position: relative;
    height: 52px;
    @include XYCenterChildren;

    & > a > span {
      position: absolute !important;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      height: 40px !important;
    }
  }
}

label.menuButton {
  position: fixed;
  top: var(--p-3);
  right: var(--p-2);
  background-image: var(--grey-gradient);
  width: 45px;
  height: 40px;
  font-size: 0;
  box-shadow: var(--sm-shadow), inset 0 0 0 0 transparent;
  @include XYCenterChildren;
  flex-direction: column;
  padding: var(--p-1);
  border-radius: var(--sm-border-radius);
  transition: box-shadow 0.1s, right 0.3s;
  z-index: 11;

  @media screen and (min-width: 500px) {
    right: 5%;
  }

  @media screen and (min-width: 768px) {
    right: -20rem;
  }

  & > div {
    position: relative;
    width: 100%;
    background-color: var(--font-colour);
    background-image: var(--blue-gradient);
    height: 4px;
    z-index: 10;
    border-radius: 1rem;
    pointer-events: none;
    transition: all 0.3s;
    box-shadow: var(--light-sm-shadow);

    &:nth-of-type(2) {
      margin: 4px 0;
    }
  }
}

.checkbox {
  position: absolute;
  left: -10000%;

  &:checked {
    & ~ nav {
      top: 0;
    }

    & ~ label > div {
      $angle: 40deg;
      &:first-of-type {
        transform-origin: center right;
        transform: rotate(-($angle)) translateX(-0px) translateY(-6px);
      }

      &:nth-of-type(2) {
        transform: rotateZ(360deg);
        opacity: 0;
      }

      &:last-of-type {
        transform-origin: center right;
        transform: rotate($angle) translateX(-1px) translateY(5px);
      }
    }
  }
}
